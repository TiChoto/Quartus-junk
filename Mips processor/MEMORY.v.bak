`timescale 1ns / 1ps
module MEMORY (
    input clk,
    input reset,
    input MemRead,
    input MemWrite,
    input [31:0] address,       // word address (each word = 4 bytes)
    input [31:0] data_in,
    output reg [31:0] data_out
);
    parameter MEM_SIZE = 256; // number of 32-bit words
    reg [31:0] mem [0:MEM_SIZE-1];

    // Optional: preload memory from file
    initial begin
        $readmemh("memory.txt", mem);
    end

    always @(posedge clk) begin
        if (reset) begin
            data_out <= 32'b0;
        end else if (MemRead) begin
            data_out <= mem[address[31:2]]; // word-aligned access
        end else if (MemWrite) begin
            mem[address[31:2]] <= data_in;
        end
    end
endmodule
